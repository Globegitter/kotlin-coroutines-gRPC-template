apply plugin: 'kotlin'
apply plugin: 'com.google.protobuf'
apply plugin: 'idea'

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    implementation "com.github.marcoferrer.krotoplus:kroto-plus-coroutines:$krotoplus_version"

    implementation "com.google.protobuf:protobuf-java:$protobuf_version"
    implementation "io.grpc:grpc-protobuf:$grpc_version"
    implementation "io.grpc:grpc-stub:$grpc_version"
    implementation "io.grpc:grpc-netty:$grpc_version"
}

protobuf {
    protoc { 
        artifact = "com.google.protobuf:protoc:$protobuf_version"
    }
    
    //noinspection GroovyAssignabilityCheck
    plugins {
        grpc { artifact = "io.grpc:protoc-gen-grpc-java:$grpc_version" }
        kroto {
            artifact = "com.github.marcoferrer.krotoplus:protoc-gen-kroto-plus:$krotoplus_version:jvm8@jar"
        }
    }

    generateProtoTasks {
        def krotoConfig = file("krotoPlusConfig.asciipb")

        all().each{ task ->
            // Adding the config file to the task inputs lets UP-TO-DATE checks
            // include changes to configuration
            task.inputs.files krotoConfig

            task.plugins {
                grpc {}
                kroto {
                    // We set the kroto output directory to match the java output directory
                    // so that we can use the kotlin DslMarker annotation in our protobuf 
                    // message builders. If you are not using the kroto option 'use_dsl_markers: true'
                    // then you don't need to take any care with 'outputSubDir' 
                    outputSubDir = "java"
                    
                    option "ConfigPath=$krotoConfig"
                }
            }
        }
    }
}